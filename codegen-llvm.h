/**
 * @file codegen-llvm.h
 *
 * Code generator based on the Low Level Virtual Machine. Header.
 *
 * @author Ondřej Hošek, e0925631
 */

#ifndef __CODEGEN_LLVM_H__
#define __CODEGEN_LLVM_H__

# ifdef __cplusplus
extern "C" {
# endif

# include "ast.h"

/** Possible outputs generated by the code generator. */
typedef enum
{
	OT_X86_64_ASM = 0,	/**< Intel x86-64 assembly code */
	OT_LLVM_BC = 1,		/**< LLVM bitcode */
	OT_LLVM_ASM = 2,	/**< LLVM assembly @warning currently not implemented */
	OT_LAST			/**< marks the highest possible value @warning not a real output type */
} output_type_e;

/**
 * Generate code using LLVM.
 *
 * @param root Root node of AST. Must be a program node.
 * @param outtype Type of code to generate.
 * @param outfile stdio FILE object to write output into.
 * @param optimize Activate LLVM-based optimizations.
 * @param paranoid Paranoid mode. Doesn't optimize away type assertions.
 */
void codegen_llvm(ast_generic_node *root, output_type_e outtype, FILE *outfile, char optimize, char paranoid);

# ifdef __cplusplus
}
# endif

#endif
